body {
    font-family: "Arial", sans-serif;
    padding-left: 1em;  /* Left padding */
    padding-right: 1em;  /* Right padding */

}

text {
    font-size: 10px;
}

#container {
    display: flex;
}
#text-container {
    flex: 1;
    display: flex;
    flex-direction: column;
    min-width: 22em; 
    /* max-width: 22.75em;  */
 }

#pie-svg{
    padding-left: 1.7em;
}


 /* #text-container {
    display: flex; /* Enable Flexbox */
   /*  justify-content: flex-end; /* Align child elements to the end (right) */
   /*  flex-direction: column; /* Keeps the original column layout */
/* } */

/* #right-align-wrapper {
    display: flex;
    justify-content: flex-end; /* Aligns child to the right */
 /*   width: 100%; /* Ensures the wrapper takes full width of its parent */
/*} */

#right-align-wrapper {
    flex: 1;
    display: flex;
    flex-direction: column;
    min-width: 22.75em; 
    max-width: 22.75em; 
}

#left_panel_text {
    padding-left: 1em;

    /* If specific width is needed, define it here to ensure it aligns right properly */
    width: auto; /* Adjust based on content or specific requirements */
}






#svg-container {
    flex: 0 0 auto;
}



#left_panel_text{
    min-height: 20em; /* Minimum width in em */
    max-height: 20em; /* Maximum width in em, equal to min-width for a fixed effect */
}

#short_paragraph, #long_paragraph {
flex: 0 0 auto;
}
#short_paragraph{
    padding-top: 0.5em;
    font-size: 12px;
    text-align: justify;

}
#long_paragraph{
    padding-top: 0.5em;
    font-size: 11px;
    text-align: justify;
}
#action_name{
    font-weight: bold;
}

#likerts {
    padding-top: 0.9em;
    font-size: 10px;
}

.likert-container {
    display: flex; /* Enables flexbox layout */
    align-items: center; /* Aligns items vertically in the center */
    padding-top: 0.16em;
    margin-bottom: 0.5em; /* Adjusted to your existing margin */
}

.exp-name {
    flex: 0 0 auto; /* Do not grow or shrink, but keeps its original size */
    margin-right: 20px; /* Space between the experiment name and the Likert scale */
    white-space: nowrap; /* Prevents the name from wrapping */
    min-width: 1em; /* Minimum width in em */
    max-width: 1em; /* Maximum width in em, equal to min-width for a fixed effect */  

}

.likert-scale {
    flex: 1 0 auto; /* Allows the Likert scale to fill the rest of the space */
    display: flex; /* Ensures the scale items are displayed inline */
    align-items: center; /* Vertically aligns items in the center */
}

.likert-label {
    display: inline-block;
    min-width: 50px; /* Ensure you specify the unit, e.g., px */
    text-align: center;
    margin: 0 5px; /* Ensures labels are centered and spaced appropriately */
}

.textbox {
    margin-left: 0px;
    flex-grow: 1; /* Allows the textbox to grow and fill available space */
}
#container-pie {
    display: flex; /* Aligns children divs side by side */
  }

  #data-grid {
    width: 100%;
    display: grid;
    grid-template-columns: auto auto;
    gap: 2px; /* Reduced gap between grid items */
    /* max-width: 220px; Reduced width to make the grid narrower */
    font-size: 12px; /* Smaller font size overall */
    align-self: center; /* This will center the grid in the flex container */

  }
  
  #data-grid input {
    max-width: 10em;
    /* padding-right: 0.5em; */
  }

  #data-grid label {
    /* text-align: right; */
    padding-right: 2px;
    padding-top: 5px;
    white-space: nowrap; /* Prevent wrapping of text */
  }
  
  .input-small {
    width: 100%; /* Adjusted to fill the reduced column width */
    padding: 1px; /* Further reduced padding to decrease input height */
  }

  /* #pie-svg {
    width: 200px;
    height: 200px; 
    margin-top: 50px; 
    margin-left: 20px;
  }
 */


  #centered-container {
    display: flex;
    flex-direction: column; /* Stack children vertically */
    align-items: center; /* Center items horizontally */
    flex-wrap: wrap; /* Allows wrapping, not typically needed with column direction */
}

/* #windrose-svg, #pie-svg {
    width: 200px; /* Adjust width as necessary */
  /*  height: 200px; /* Adjust height as necessary */
   /* margin-bottom: 20px; /* Adds space between the two divs */
   /* text-align: center; /* Center content inside each div */
/*} */

#data-grid {
    /* Existing styles */
    align-self: center; /* This will center the grid in the flex container */
}

#vertical-stack {
    display: flex;
    flex-direction: column; /* Stacks children vertically */
    align-items: center; /* Centers them horizontally */
}

#vertical-stack > div {
    margin-bottom: 20px; /* Adds space between vertically stacked divs */
}
